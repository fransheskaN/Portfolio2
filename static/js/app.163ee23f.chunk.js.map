{"version":3,"sources":["Screens/HomeScreen.js","Components/Quiz/index.js","Screens/QuizScreen.js","Components/Result/index.js","Screens/ResultScreen.js","App.js"],"names":["HomeScreen","navigation","route","useState","message","setMessage","goToMessageScreen","React","navigate","View","style","styles","container","value","onChangeText","text","placeholder","containerStyle","width","onPress","title","Btn","StatusBar","MultipleChoice","setScore","setAnswerKeys","answerKeys","index","options","label","selectedValue","onValueChange","itemValue","prevValue","undefined","correct","score","map","option","Item","key","QuizScreen","quizList","questionText","newKey","answers","currentQuestion","setCurrentQuestion","setResult","next","useCallback","nextQuestion","length","params","paramKey","Result","white","ResultScreen","Stack","createNativeStackNavigator","App","useFonts","Poppins_200ExtraLight","Poppins_400Regular","Poppins_500Medium","Poppins_700Bold","NavigationContainer","Navigator","Screen","name","component","StyleSheet","create","Button","borderWidth","borderColor","backgroundColor","flex","fontFamily","alignItems","justifyContent","color"],"mappings":"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","file":"static/js/app.163ee23f.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { View } from \"react-native\";\nimport { styles } from \"../App\";\nimport { Button, Input } from \"react-native-elements\";\nimport { useState } from \"react\";\n// Home screen with welcome and input for user name then goes to quiz\nexport default function HomeScreen({ navigation, route }) {\n  const [message, setMessage] = useState(\"\");\n\n  const goToMessageScreen = React.useCallback(() => {\n    navigation.navigate(\"Quiz\", { message });\n  });\n  return (\n    <View style={styles.container}>\n      <h1>Art history quiz</h1>\n      <h2>Match the artist with the painting</h2>\n      <p>Welcome, please put your name</p>\n      <Input\n        value={message}\n        onChangeText={(text) => setMessage(text)}\n        placeholder=\"Enter Name\"\n        containerStyle={{ width: 300 }}\n      />\n      <Button\n        onPress={goToMessageScreen}\n        title=\"Start\"\n        style={styles.Btn}\n      ></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n","import * as React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { Text } from \"react-native-elements\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\n// quiz component brings in parameters needed to display & have quiz count increment \r\nexport default function MultipleChoice({\r\n  setScore,\r\n  setAnswerKeys,\r\n  answerKeys,\r\n  index,\r\n  options,\r\n}) {\r\n  return (\r\n    <View>\r\n      <Text>{options.label}</Text>\r\n      <Picker\r\n        key={index}\r\n        selectedValue={answerKeys[index]}\r\n        onValueChange={(itemValue) =>\r\n          setAnswerKeys((prevValue) => {\r\n            // [undefined, undefined]\r\n            // First question -- that's the index we want to change\r\n            prevValue[index] = itemValue;\r\n            if (itemValue !== undefined) {\r\n              if (options.correct === itemValue) {\r\n                setScore((score) => score + 1);\r\n              } else {\r\n                setScore((score) => score - 1);\r\n              }\r\n            }\r\n            return [...prevValue];\r\n          })\r\n        }\r\n      >\r\n        {options.map((option, index, options) => (\r\n          <Picker.Item key={index} label={option.label} value={option.key} />\r\n        ))}\r\n      </Picker>\r\n    </View>\r\n  );\r\n}\r\n","import * as React from \"react\";\nimport { View } from \"react-native\";\nimport { Button, CheckBox, Input, Text } from \"react-native-elements\";\nimport { styles } from \"../App\";\nimport { useCallback, useState } from \"react\";\nimport MultipleChoice from \"../Components/Quiz\";\n\n// array of questions and keys\nexport default function QuizScreen({ navigation, route }) {\n  const quizList = [\n    {\n      questionText: \"Hint: During renaissance\",\n      key: \"1\",\n      newKey: \"2\",\n      options: [\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n      ],\n      answers: [\n        { label: \"scarlet\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n      ],\n    },\n    {\n      questionText: \"Hint: During renaissance\",\n      key: \"2\",\n      newKey: \"3\",\n      options: [\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n      ],\n    },\n    {\n      questionText: \"Hint: During renaissance\",\n      key: \"3\",\n      newKey: \"4\",\n      options: [\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n      ],\n    },\n    {\n      questionText: \"Hint: During renaissance\",\n      key: \"4\",\n      newKey: \"5\",\n      options: [\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n        { label: \"The Birth of Venus\", correct: true, key: \"1\" },\n        { label: \"The Hay-Wain\", correct: true, key: \"2\" },\n      ],\n    },\n  ];\n  // bank of useStates\n  const [isChecked, setIsChecked] = useState(false);\n  let [currentQuestion, setCurrentQuestion] = useState(0);\n  let [result, setResult] = useState(false);\n  let [score, setScore] = useState(0);\n  let [answerKeys, setAnswerKeys] = useState([undefined, undefined]);\n// Allows to change to next page\n  let next = useCallback(() => {\n    let nextQuestion = currentQuestion + 1;\n    if (nextQuestion < quizList.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setResult(true);\n    }\n  });\n// QuizScreen, shows quiz component \n  return (\n    <View style={styles.container}>\n      <p>Welcome {route.params.message}</p>\n      <h1>Question {quizList[currentQuestion].key}</h1>\n      <p>{quizList[currentQuestion].questionText}</p>\n      {quizList[currentQuestion].options.map((index) => (\n        <MultipleChoice\n          key={index}\n          answerKeys={answerKeys}\n          setScore={setScore}\n          setAnswerKeys={setAnswerKeys}\n          index={index}\n          options={quizList[currentQuestion].options}\n        ></MultipleChoice>\n      ))}\n      <br></br>\n      <Button onPress={() => next()} title=\"Next Question\"></Button>\n      <br></br>\n      <Button\n        onPress={() =>\n          navigation.navigate(\"Result\", {\n            paramKey: score,\n          })\n        }\n        title=\"See results\"\n      ></Button>\n    </View>\n  );\n}\n","import { View } from \"react-native\";\r\nimport { Text } from \"react-native-elements\";\r\nimport { styles } from \"../../App\";\r\n// result component shows score and styles Text\r\nexport let Result = ({ score }) => {\r\n  return (\r\n    <View >\r\n      <Text style={styles.white}>Your score: {score}</Text>\r\n    </View>\r\n  );\r\n};\r\n","import { StatusBar } from \"expo-status-bar\";\nimport { View } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { styles } from \"../App\";\nimport { Button } from \"react-native-elements\";\nimport { Result } from \"../Components/Result\";\n// result screen displys total count\nexport default function ResultScreen({ navigation, route }) {\n  return (\n    <View style={styles.container}>\n      <p>Thanks for playing</p>\n      <Result score={route.params.paramKey}></Result>\n\n      <Button\n        onPress={() => navigation.navigate(\"Home\")}\n        title=\"Start Over\"\n      ></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n","//Option 2 : New project , 3 components\n// component 1 : Shows welcome screen, input your username\n// Componenr 2 : Shows quizes quizList and choices\n// Component 3 : Calculates the scores and shows result\n// IMPORTANT : add $ expo install @expo-google-fonts/dev expo-font\n\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { StyleSheet, View } from \"react-native\";\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport QuizScreen from \"./Screens/QuizScreen\";\nimport ResultScreen from \"./Screens/ResultScreen\";\n//Allows for fonts\nimport {\n  useFonts,\n  Poppins_200ExtraLight,\n  Poppins_400Regular,\n  Poppins_500Medium,\n  Poppins_700Bold,\n} from \"@expo-google-fonts/dev\";\n// Allows for screens to be viewed\nconst Stack = createNativeStackNavigator();\n//load fonts, if fonts are not loaded, show loaded screen\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    Poppins_200ExtraLight,\n    Poppins_400Regular,\n    Poppins_500Medium,\n    Poppins_700Bold,\n  });\n  if (!fontsLoaded) {\n    return (\n      <View>\n        <h1>Loading</h1>\n      </View>\n    );\n  } else {\n    return (\n      //Create navigation portal for each screen\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Quiz\" component={QuizScreen} />\n          <Stack.Screen name=\"Result\" component={ResultScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n//Stylesheet\nexport const styles = StyleSheet.create({\n  Button: {\n    width: 300,\n    borderWidth: 2,\n    borderColor: \"#F29B97\",\n  },\n  Btn: {\n    width: 300,\n    backgroundColor: \"#7D98A1\",\n  },\n  container: {\n    flex: 1,\n    fontFamily: \"Poppins_400Regular\",\n    backgroundColor: \"#1C2321\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: \"#fff\",\n  },\n  white: {\n    color: \"#fff\",\n  },\n});\n/////////////////////\n"],"sourceRoot":""}